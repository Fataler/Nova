@<|
label 'test_box_anim'
is_unlocked_start()
|>
<|
show(bg, 'rain')
stop(bgm)
set_box()
|>
Test dialog animation

Name::111

222

<|
set_box('full', 'dark') -- dark in box_style_presets of dialogue_box.lua sets the theme to Basic
                        -- The Basic in the theme of DialogueBoxController.cs sets dialogueText.layoutSetting = DialogueEntryLayoutSetting.Default
                        -- where preferredHeight is -1, then there is no limit to the height of each conversation
                        -- Otherwise, when the theme is Default, the preferredHeight is 150, and the height of each dialog is limited to 2 lines

__Nova.dialogueBoxController.canRefreshTextProxy = false -- disable refreshing text layout
                                                         -- Write this sentence before the custom dialog animation, otherwise every time the position/size of the dialog box changes, the text layout must be refreshed, and flickering will occur
__Nova.dialogueBoxController.canClickForward = false -- disable clicking the mouse to skip the animation

box_anchor({0.05, 0.95, -1, 0}) -- move the dialog outside the bottom edge of the screen
                                -- The four numbers of anchor are the relative positions of the left, right, bottom, and top edges of the dialog box on the screen. The screen is 0 to 1 from left to right, and 0 to 1 from bottom to top.
                                -- So the bottom edge anchor of the dialog box is -1, and the top edge is 0, that is, the dialog box is outside the bottom edge of the screen
anim:box_anchor({0.05, 0.95, 0, 1}, 3, {1, 0}) -- move the dialog to the screen
                                              -- After this animation ends, the lower edge anchor of the dialog box is 0, and the upper edge is 1
                                              -- The animation time is 3 seconds
                                              -- easing is {1, 0}, which means no acceleration at the beginning (1 times the speed), and deceleration to zero at the end

box_tint({0, 0}) -- make the dialog background black (RGB multiplied by 0), fully transparent (alpha multiplied by 0)
anim:box_tint({0, 0.5}, 0.5 -- the dialog fades in, the background becomes translucent (alpha multiplied by 0.5), and the animation time is 0.5 seconds
    ):_and():wait(10 -- wait for 10 seconds, the text scrolling animation ends
    ):box_tint({0, 0}, 0.5) -- the dialog fades out, the background becomes fully transparent (alpha multiplied by 0), the animation time is 0.5 seconds

text_delay(1) -- text starts appearing after 1 second
text_duration(8) -- The typewriter animation of the text is 8 seconds, which is generally faster than the text scroll animation
text_scroll(0) -- The initial position of the text in the dialog box is 0, which can be seen in Pos Y of UI/DialogueView/DialoguePanel/DialogueTextScrollView/Viewport/DialogueText
anim:wait(2 -- wait for 2 seconds before the text scrolling animation, which is when the animation of the dialog box moving to the screen is almost over
    ):text_scroll(0, 1300, 8, {0, 1} -- text scroll animation, initial position is 0, final position is 1300 (so that the text is outside the upper edge of the dialog), the time is 8 seconds, at the beginning Accelerate from zero without slowing down at the end
    ):action(function()
        __Nova.dialogueBoxController.canRefreshTextProxy = true -- allows to refresh text layout
        __Nova.dialogueBoxController.canClickForward = true -- allows clicking the mouse to skip the animation
    end)
|>
0000000000
1111111111
2222222222
3333333333
4444444444
5555555555
6666666666
7777777777
8888888888
9999999999
<b></b>
0000000000
1111111111
2222222222
3333333333
4444444444
5555555555
6666666666
7777777777
8888888888
9999999999

<|
set_box()
|>
restore dialog

Name::111

222

end of test
@<| is_end() |>