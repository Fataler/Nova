@<|
label('tut04', 'Tutorial 4 dialog')
is_start()
|>
<|
show(bg, 'rain')
stop(bgm)
set_box()
|>
Tutorial 4 Dialogs

<|
set_box('full', 'dark')
|>
The `set_box` function is used to set the position and style of the dialog

Its first parameter is the default name of the dialog position, such as `full` is to set the dialog position to full screen

All position presets are defined in `box_pos_presets` in `dialogue_box.lua`

The `anchor` is the position of the four sides of the dialog box on the screen, represented by a number between 0..1

`offset` is the distance that the left, right, up, and down sides move inward on the basis of `anchor`, expressed in pixels

`anchor` and `offset` generally only need one of the two, which can be used according to your UI design habits

`update_mode` is the update mode of the dialog, which can be set to `Overwrite` or `Append`

Usually when the dialog is at the bottom of the screen, the update method is `Overwrite`. Every time a new dialog is displayed, the old dialog will not be displayed.

And the update method of the full screen dialog is `Append`, when the new dialog is displayed, the old dialog is still on it

The update method is included in the preset of the location, because the update method is generally set when the location is set

<|
new_page()
|>
BTW:: `new_page` function is used to clear the dialog

<|
set_box('left', 'dark')
|>
When changing the position of the dialog box, the dialog box will also be automatically cleared

<|
set_box('right', 'dark', false)
|>
If you don't want to clear it automatically, you can set the third parameter of `set_box` to false

<|
set_box('full', 'dark')
|>
The second parameter of `set_box` is the preset name of the style

All style presets are defined in `box_style_presets` in `dialogue_box.lua`

Where `tint` is the color of the dialog background, this color will be multiplied by the original RGBA value of the dialog background image

`alignment` is the alignment of the text, `text_color` is the color of the text

`text_material` is the material of the text, which is generally used for strokes or lighting effects, and `outline` is the stroke

<|
set_box('full', 'transparent', false)
|>
When the background of the dialog box is transparent, it is generally necessary to add a stroke to the text

<|
set_box('full', 'dark')
|>
By the way: See [Unity official website](https://learn.unity.com/tutorial/textmesh-pro-working-with-material-presets) for the method of creating material presets. After creation, set the font, material and material name corresponding to each language in `I18nFontConfig.config` in the `UI` game object

By the way: For the implementation of the `theme` in the position preset, see `DialogueBoxController.cs`, which is used to control more typographic elements of the dialog box, including the replacement of the background image, the position of the close button and the dialog end icon, and the text. Distance from the edge of the dialog, distance from the character name to the content of the speech, etc.

<|
set_box('hide')
|>

<|
set_box()
|>
`set_box(\'hide\')\` can hide the dialog box, which is actually moving the position of the dialog box outside the screen

All parameters of `set_box()` are default values, which is to set the dialog box to the default position and style

BTW:: the dialog is hidden when the game starts, so these tutorials have `set_box()` at the beginning

By the way: If there is a lot of code to be written at the beginning of each chapter, you can write a function and put it in `animation_presets.lua`

<|
box_alignment('center')
|>
Other functions provided in `dialogue_box.lua` can also be used independently, `set_box` actually passes the preset value to these functions

<|
set_box()
|>
The rich text XML markup provided by TextMeshPro can be used in the text (see [TextMeshPro official website](http://digitalnativestudios.com/textmeshpro/docs/rich-text/))

Such as <b>bold</b>, <i>italic</i>, <s>strikeout</s>, <color=#FF0000>change color</color>, <size=150%>change size</size>

By the way: In order to facilitate writing these tutorials, we also parsed Markdown hyperlinks and code blocks, but they should not be used in general games.

<|
show(xiben, 'normal', pos_c)
sound('clap')
box_hide_show(2)
|>
`box_hide_show` is used to make the dialog disappear for a few seconds and then reappear, this trick can leave room for the show

<|
hide(xiben)
stop_ff()
|>
`stop_ff` function is used to stop fast forward, `stop_auto_ff` is used to stop autoplay and fast forward

You can try going back to a few conversations before, and then holding down the Ctrl key to fast-forward, it will stop at the conversation above. This can be done before the end of each chapter or before an important plot

<|
alert('This is an alert box')
|>
The `alert` function is used to display warnings

<|
notify('This is a notification box')
|>
The `notify` function is used to display notifications

This concludes Tutorial 4 Dialogs
@<| jump_to 'tut05' |>