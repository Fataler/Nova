@<|
label 'test_global_variable'
is_unlocked_start()
|>
<|
show(bg, 'rain')
stop(bgm)
set_box()
-- In order to prevent players from adding a week each time they read the file to the last dialogue, add 1 to the global variable round_count at the first dialogue, and then save it to a local variable
-- In this week, no matter how the player reads or jumps back, the local variable round_count is the global variable round_count + 1 at the beginning of the week
-- If the file is read to another week, the local variable round_count will not exceed the global variable round_count
-- At the beginning gv_round_count will return nil, then use or 0 to replace it with 0
v_round_count = (gv_round_count or 0) + 1
|>
test global variables

111

222

<|
gv_count = (gv_count or 0) + 1
print(gv_count)
|>
How many times this sentence will be output in the Console
It will be added every time you read a file/jump back here

333

444
@<|
branch {
    { dest = 'test_global_variable_next', text = 'normal options'},
    { dest = 'test_global_variable_next', text = 'The second round will only appear', mode = 'show', cond = 'v_round_count >= 2' },
}
|>

@<| label 'test_global_variable_next' |>
555

666

<|
-- If the local variable round_count is larger than the global variable, it means that a new round is over, save it to the global variable
if v_round_count > (gv_round_count or 0) then
    gv_round_count = v_round_count
end
print(gv_round_count)
|>
How many weeks will be output in the Console

end of test
@<| is_end() |>