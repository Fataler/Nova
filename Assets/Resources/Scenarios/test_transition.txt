@<|
label 'test_transition'
-- is_unlocked_start()
|>
<|
show(xiben, 'normal', pos_l)
show(bg, 'rain')
stop(bgm)
set_box()
|>
test transition

<|
anim:trans(cam, function()
        hide(xiben)
        show(gaotian, 'normal', pos_r)
        show(bg, 'room')
    end, 'fade', 1, { _Mask = 'Masks/eye' })
|>
first class transition
The previous picture fades to the next picture

<|
anim:trans2(cam, function()
        hide(gaotian)
        show(xiben, 'normal', pos_l)
        show(bg, 'rain')
    end, 'broken_tv', 1)
|>
The second type of transition
Let the previous picture disappear first, and then let the next picture appear

<|
anim:vfx(cam, 'color', {0, 1}, 1, { _ColorMul = 0 })
|>
A transition completed in two sentences
Make the screen black

<|
-- When not in trans, the character's show and hide have a fade-in and fade-out animation of a few tenths of a second by default
-- now we don't need this animation, we will use auto_fade_off() and auto_fade_on()
auto_fade_off()
hide(xiben)
show(gaotian, 'normal', pos_r)
show(bg, 'room')
auto_fade_on()
anim:vfx(cam, 'color', {1, 0}, 1, { _ColorMul = 0 })
|>
let the screen appear

<|
anim:vfx(bg, 'mix_add', {0, 1}, 1, { _Mask = 'Masks/vertical' })
|>
Add special effects to the background

Background effects persist

<|
anim:vfx(bg, 'mix_add', {1, 0}, 1, { _Mask = 'Masks/vertical' })
|>
End of background effects

<|
anim:vfx(cam, 'lens_blur', {0, 1}, 1, { _Size = 4 })
|>
Add special effects to the camera

Camera effects persist

<|
anim:vfx(cam, 'lens_blur', {1, 0}, 1, { _Size = 4 })
|>
Camera effect ends

<|
-- First set the layers of gaotian and fg to cam_mask.maskLayer, then add vfx to cam_mask
gaotian.layer = cam_mask.maskLayer
fg.layer = cam_mask.maskLayer
show(xiben, 'normal', pos_l)
show(bg, 'rain')
show(gaotian, 'normal', pos_r)
show(fg, 'moon_halo')
anim:vfx(cam_mask, 'fade', {0, 0.5}, 1, { _Mask = 'Masks/wipe_left', _Vague = 0.1 })
|>
test mask

<|
-- Reset the layers of gaotian and fg to 0, and set the cullingMask of cam2 to 1, which is to shoot layer 0
gaotian.layer = 0
fg.layer = 0
cam2.cullingMask = 1
hide(fg)
anim:move(cam2, {-3, 0})
|>
It is also possible to have two cameras capture the same layer

<|
anim:vfx(cam_mask, 'fade', {0.5, 0}, 1, { _Mask = 'Masks/wipe_left', _Vague = 0.1 })
|>
end of mask

<|
cam2.cullingMask = 2^cam_mask.maskLayer
|>
reset cullingMask of cam2

end of test
@<| is_end() |>